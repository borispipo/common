// Copyright 2022 @fto-consult/Boris Fouomene. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

///les paramètres de configuration à exploiter : 
{
    notifyOnOnlineStateChange : {boolean} ///si différent de false, lorsque l'application va en offline où online, un messsage de notification est envoyé à l'utilisateur
    includeCredentialsOnApiFetch : {boolean}, ///includeCredentialsOnApiFetch doit être définit pour l'inclusion automatique des crédentials aux entête des apiFetch
    API_HOST : {string|validURL} ///l'adresse url par défaut es apiFetch
    validatorRules : {object} // pour étendre les règles de validation du composant $lib/validator
    apiFetchDelay | apiFetchTimeout {number} : le délai d'attente des requêtes d'API
    showProfilAvatarOnDrawer : {boolean} si false alors le profil utilisateur ne sera pas affiché sur le drawer principal de l'application, mais plutôt sur l'AppBar des écrans de type non modal

    /**si l'application prendra en charge les tâches d'arrière plan*/
    runBackgroundTasks |canRunBackgroundTasks | backgroundTasks {boolean}

    /*** le délai d'attente après lequel, si la promesse liée à l'exécution des tâches d'arrière plan n'est pas resolue, alors
        la promesse des tâches d'arrière plan est résolue automatiquement
    */
    backgroundTasksDelai | backgroundTasksTimeout {number}

    /**The number of milliseconds between internet reachability checks when the internet was previously detected. Only used on platforms which do not supply internet reachability natively or if useNativeReachability is false. */
    netInfoReachabilityLongTimeout : {number}

    /**The number of milliseconds between internet reachability checks when the internet was not previously detected. Only used on platforms which do not supply internet reachability natively or if useNativeReachability is false. */
    netInfoReachabilityShortTimeout : {number}

    pieceIdSuffixDateFormat : {string}, default : "ddmmyy-HHMMssl" : le format de sufixe à ajouter aux pièces générées automatiquement
    
    /*** cette fonction est appelée pour récupérer la piece associée à l'utilisateur connecté, afin de généré l'id d'un élément donné*/
    getUserPieceId : (user)=> {string}

    /*** spécifie l'intervale de temps d'attente pour l'exécution des tâches d'arrière plan*/
    idleTimeout {number}

    /**permet de spécifier la fonction qui sera appelée pour l'exécution des tâches d'arrière plan. cette fonction doit retourner une promesse
    
    **/
    runBackgroundTasks : ({isOnline})=><Promise>

    ///retrieve initial struct datas 
    pouchdbInitialStructsData {function|object} => {
        [structDataTableName] {object} : [{datas}]
    }
    
    deviceProps : {object}, //les propriétés de devices à récupérer dans la rubrique d'aide
    
    /************************* Auth settings              */
    /tell if application is singleUserAllowed and must get the default user
    isAuthSingleUserAllowed {boolean|number},
    authDefaultUser {object} => {[code],[label]} //the default connectedUser to use whent isAuthSingleUserAllowed is set to true
    
    includeFieldsInDatagridFetchOptions : {boolean}, //spécifie si par défault, les champs fields, seront inclus dans les fetchOptions du datagrid
    
    authLoginIdField  || process.env.AUTH_LOGIN_ID_FIELD: {string}, permet de récuprer le nom du champ id dans l'objet user
    
    authSessionEncryptKey || process.env.AUTH_SESSION_ENCRYPT_KEY [string], permet de définier la clé permettant de crypter les données de session
}
